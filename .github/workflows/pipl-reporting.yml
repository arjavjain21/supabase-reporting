name: Pipl Daily Reporting

on:
  schedule:
    # Runs at 00:10 AM EST (05:10 AM UTC) every day
    - cron: '10 5 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      date_override:
        description: 'Override date (YYYY-MM-DD format, optional)'
        required: false
        type: string

jobs:
  pipl-reporting:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client libpq-dev
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psycopg2-binary requests pytz
        
    - name: Create modified script for single date execution
      run: |
        cat > pipl_daily_runner.py << 'EOF'
        #!/usr/bin/env python3
        """
        Daily runner for Pipl reporting - runs for yesterday by default
        """
        import sys
        import os
        from datetime import datetime, timedelta
        import pytz
        
        # Add the current directory to Python path
        sys.path.append(os.path.dirname(os.path.abspath(__file__)))
        
        # Import the main script functions
        from PV_daily_reporting import run_for_date, logger
        
        if __name__ == "__main__":
            logger.info("Starting Pipl Daily Reporting via GitHub Actions")
            
            try:
                # Check if date override is provided via environment variable
                date_override = os.environ.get('DATE_OVERRIDE', '').strip()
                
                if date_override:
                    # Use provided date
                    report_date = date_override
                    logger.info(f"Using override date: {report_date}")
                else:
                    # Use yesterday in IST timezone
                    IST = pytz.timezone("Asia/Kolkata")
                    yesterday = datetime.now(IST) - timedelta(days=1)
                    report_date = yesterday.strftime("%Y-%m-%d")
                    logger.info(f"Using yesterday's date (IST): {report_date}")
                
                # Run the pipeline
                run_for_date(report_date)
                logger.info("Pipl daily reporting completed successfully")
                
            except Exception as e:
                logger.error(f"Pipl daily reporting failed: {e}")
                sys.exit(1)
        EOF
        
    - name: Run Pipl Daily Reporting
      env:
        DATE_OVERRIDE: ${{ github.event.inputs.date_override }}
      run: |
        python pipl_daily_runner.py
        
    - name: Upload logs as artifact
      uses: actions/upload-artifact@v3
      if: always()  # Upload logs even if the job fails
      with:
        name: pipl-reporting-logs-${{ github.run_number }}
        path: pipl_supabase_reporting.log
        retention-days: 30
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "Pipl daily reporting failed. Check the logs for details."
        echo "Log artifact will be available in the Actions tab."
        
    - name: Display summary
      if: success()
      run: |
        echo "✅ Pipl daily reporting completed successfully"
        echo "📊 Log file: pipl_supabase_reporting.log"
        echo "🗓️ Report date: $(date -d 'yesterday' '+%Y-%m-%d')"
